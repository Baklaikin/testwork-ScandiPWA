{"version":3,"file":"static/js/926.680f6e54.chunk.js","mappings":"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","sources":["components/cart-page/CartPage.styled.jsx","components/cart-page/CartPage.jsx"],"sourcesContent":["import styled from \"styled-components\";\r\nimport PlusSquare from \"../../images/plus-square.svg\";\r\nimport MinusSquare from \"../../images/minus-square.svg\";\r\n\r\nexport const Container = styled.div`\r\nmax-width:1440px;\r\nmargin:0 auto;\r\npadding:80px 101px;\r\n`;\r\n\r\nexport const PageName = styled.h1`\r\nmargin-top: 0;\r\nmargin-bottom: 55px;\r\nfont-weight: 700;\r\nfont-size: 32px;\r\nline-height: 1.25;\r\n`;\r\n\r\nexport const NoProductTitle = styled.h2`\r\nfont-weight: 600;\r\nfont-size: 28px;\r\nline-height: 1.25;\r\n`;\r\n\r\nexport const CartList = styled.ul`\r\n\r\n`;\r\n\r\nexport const CartListItem = styled.li`\r\noverflow: auto;\r\nmargin-bottom:40px;\r\nborder-top: 1px solid #E5E5E5;\r\n&:last-of-type{\r\n    border-bottom: 1px solid #E5E5E5\r\n}\r\n`;\r\n\r\nexport const CartTitle = styled.h2`\r\nwidth: 297px;\r\nmargin-top: 0;\r\nmargin-bottom: 16px;\r\nfont-weight: 600;\r\nfont-size: 30px;\r\nline-height: 0.9;\r\ncolor: var(--text-color);\r\n`;\r\n\r\nexport const CartModel = styled(CartTitle)`\r\nfont-weight: 400;\r\nmargin-bottom: 20px;\r\n`;\r\n\r\nexport const CartContainer = styled.div`\r\ndisplay: flex;\r\npadding: 24px 0;\r\n`;\r\n\r\nexport const CartTotal = styled.p`\r\ndisplay: inline-flex;\r\nmargin-top: 0; \r\nmargin-bottom:8px;\r\nfont-weight: 700;\r\nfont-size: 24px;\r\nline-height: 1.1666;\r\n`; \r\n\r\nexport const CartTotalSpan = styled.span`\r\ndisplay:inline-flex;\r\nwidth:108px;\r\nfont-weight: 400;\r\nfont-size: 24px;\r\nline-height: 1.1666;\r\n\r\n`;\r\n\r\nexport const CartButton = styled.button`\r\nmargin-top: 16px;\r\nwidth: 279px;\r\nheight: 43px;\r\ncolor: white;\r\nbackground-color: var(--button-color);\r\nborder: none;\r\n`;\r\n\r\nexport const TextContainer = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\njustify-content: space-between;\r\nwidth: 297px;\r\n`;\r\n\r\nexport const QuantityContainer = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\njustify-content: space-between;\r\nalign-items:center;\r\nmargin-left: auto;\r\n`;\r\n\r\nexport const QuantityAdjastment = styled.div`\r\ndisplay:flex;\r\nalign-items:center;\r\njustify-content:center;\r\nwidth:24px;\r\nheight: 24px;\r\nbackground-position: center;\r\nbackground-repeat:no-repeat;\r\nbackground-size:contain;\r\n`;\r\n\r\nexport const Plus = styled(QuantityAdjastment)`\r\nbackground-image: url(${PlusSquare});\r\n`;\r\n\r\nexport const Minus = styled(QuantityAdjastment)`\r\nbackground-image: url(${MinusSquare});\r\n`;\r\n\r\nexport const AttributesList = styled.ul`\r\ndisplay:flex;\r\nalign-items: center;\r\nflex-wrap: wrap;\r\n`;\r\n\r\nexport const ColorWrapper = styled.div`\r\n\r\nwidth:32px;\r\nheight: 32px;\r\ncolor:transparent;\r\nbackground-color: ${props => props.color ? props.color : \"none\"};\r\nbox-shadow:${props => props.color === \"#FFFFFF\" ? \"0px 0px 1px 2px rgba(250,229,255,0.51)\" : \"none\"}\r\n`;\r\n\r\nexport const Paragraph = styled.p`\r\nmargin-top:0;\r\nmargin-bottom: 8px;\r\ncolor: var(--text-color);\r\n`;\r\n\r\nexport const Price = styled(Paragraph)`\r\nfont-weight: 700;\r\nfont-size: 24;\r\nline-height: 1;\r\nmargin-bottom: 20px;\r\n`;\r\n\r\nexport const Size = styled(Paragraph)`\r\nfont-weight:700;\r\nfont-size: 18px;\r\nline-height: 1;\r\n`;\r\n\r\nexport const AttributesItem = styled.li`\r\ndisplay:flex;\r\nalign-items:center;\r\njustify-content:center;\r\nmin-width:63px;\r\nheight: 45px;\r\ncolor: var(--text-color);\r\nborder: 1px solid var(--text-color);\r\n&:not(:last-of-type){\r\n    margin-right:8px;\r\n}\r\nfont-family: 'Source Sans Pro';\r\nfont-weight: 400;\r\nfont-size: 14px;\r\nline-height: 1.6;\r\ncolor: var(--text-color);\r\ncolor: ${props => props.chosen ? \"white\" : \"var(--text-color)\"};\r\nbackground-color: ${props=>props.chosen ? \"black\" : \"white\"};\r\n`;\r\n\r\nexport const AttributesColorItem = styled(AttributesItem)`\r\ndisplay:flex;\r\nalign-items:center;\r\njustify-content:center;\r\ncolor:transparent;\r\nmin-width:36px;\r\nwidth:36px;\r\nheight:36px;\r\nborder: 1px solid ${props => props.border ? \"#5ECE7B\" : \"transparent\"};\r\n`;\r\n\r\nexport const PhotoThumb = styled.div`\r\ndisplay:flex;\r\nalign-items:center;\r\njustify-content:center;\r\nmargin-left: 24px;\r\nwidth: 200px;\r\nheight: 288px;\r\noverflow:hidden;\r\n`;\r\n\r\nexport const PhotoImage = styled.img`\r\ndisplay:block;\r\nwidth:100%;\r\nobject-fit:cover;\r\n`;\r\n\r\nexport const List = styled.ul`\r\nflex-grow: 1;\r\ndisplay: flex;\r\nflex-direction: column;\r\njustify-content: flex-end;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n&:not(:last-of-type){\r\n    margin-bottom: 16px;\r\n}\r\n`;\r\n\r\nexport const CartTotalContainer = styled.div`\r\ndisplay: flex;\r\nmin-width: 210px;\r\nflex-direction: column;\r\n\r\n`;","import { Component } from \"react\";\r\nimport { Container } from \"./CartPage.styled\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { CartList, CartListItem, CartTitle, CartTotalSpan,CartTotalContainer,\r\n    CartContainer, QuantityContainer, ColorWrapper, CartButton,\r\n    Plus, Minus, AttributesList, TextContainer, CartTotal,\r\n    Price, Item, Size, AttributesItem, List, NoProductTitle,\r\n    AttributesColorItem, PhotoImage, PhotoThumb, CartModel, PageName} from \"./CartPage.styled\"\r\n\r\nexport default class CartPage extends Component{\r\n    state = {\r\n        totalPrice:[]\r\n    }\r\n    \r\n    findPrice = (prices) => {\r\n        const actualPrice = prices.find((price) => price.currency.symbol === this.props.currency.trim()).amount;\r\n        return actualPrice;\r\n    }\r\n    \r\n    countTax = (items, currency, tax) => {\r\n        if (tax) {\r\n            return (tax * items.map((item) => item.prices.find(it => it.currency.symbol === currency.trim())).reduce((acc, item) => acc + item.amount, 0)).toFixed(2)\r\n        } else {\r\n            return items.map((item) => item.prices.find(it => it.currency.symbol === currency.trim())).reduce((acc, item) => acc + item.amount, 0).toFixed(2);\r\n        }\r\n    }\r\n\r\n    attributesRender = (attributes) => {\r\n        return attributes.map((attribute) => {\r\n                                            return <Item key={uuidv4()}>\r\n                                                <Size>{attribute.name}:</Size>\r\n                                                <AttributesList>\r\n                                                    {attribute.items.map((item, idx) => {\r\n                                                        const itemName = attribute.id.toLowerCase();\r\n                                                        const inState = itemName && this.props.cart.find(item => {\r\n                                                        if (item[itemName]) {\r\n                                                        return item[itemName].id === itemName\r\n                                                            }\r\n                                                            return\r\n                                                        })\r\n                                                        const canRender = inState && idx === inState[itemName].value;\r\n                                                        if (itemName === \"color\") {\r\n                                                            return itemName && canRender ?\r\n                                                                <AttributesColorItem\r\n                                                                onClick={e => this.props.cartAmountHandler(e, item)}\r\n                                                                key={uuidv4()} border\r\n                                                                ><ColorWrapper color={`${item.value}`}\r\n                                                                >{item.value}\r\n                                                                </ColorWrapper>\r\n                                                            </AttributesColorItem> :\r\n                                                            <AttributesColorItem key={uuidv4()} color={`${item.value}`}><ColorWrapper color={`${item.value}`}>{item.value}</ColorWrapper></AttributesColorItem>\r\n                                                        } else {\r\n                                                            return itemName && canRender ? <AttributesItem chosen key={uuidv4()}>{item.value}</AttributesItem> : <AttributesItem key={uuidv4()}>{item.value}</AttributesItem>\r\n                                                        }\r\n                                                        \r\n                                                    })}\r\n                                                </AttributesList>\r\n                                            </Item>\r\n                                        })\r\n    }\r\n\r\n    render() {\r\n        const { currency } = this.props;\r\n        let items = [...this.props.cart];\r\n        const tax = 0.21;\r\n        let cart = [];\r\n        for (let item of items) {\r\n            const inCart = cart.find(prod => prod.id === item.id)\r\n            if (!inCart) {\r\n                cart.push(item); \r\n            }\r\n        }\r\n        return <Container>\r\n            <PageName>Cart</PageName>\r\n            {items.length === 0 ? <NoProductTitle>You haven't add any product in cart so far</NoProductTitle> : null}\r\n            <CartList>\r\n                    {this.props && cart.map((item) => {\r\n                        return <CartListItem key={uuidv4()}>\r\n                            <CartContainer>\r\n                                <TextContainer>\r\n                                    <CartTitle>{item.brand}</CartTitle>\r\n                                    <CartModel>{item.name}</CartModel>\r\n                                    <Price>{currency}{this.findPrice(item.prices)}                                        \r\n                                    </Price>\r\n                                     <List>\r\n                                        {this.attributesRender(item.attributes)}\r\n                                    </List>\r\n                                </TextContainer>\r\n                                \r\n                                <QuantityContainer>\r\n                                        <Plus id=\"add\" onClick={e => this.props.cartAmountHandler(e,item)}></Plus>\r\n                                        <div>{this.props.cart.filter(prod => prod.id === item.id).length}</div>\r\n                                        <Minus id=\"delete\" onClick={e => this.props.cartAmountHandler(e,item)}></Minus>\r\n                                </QuantityContainer>\r\n                                \r\n                                <PhotoThumb>\r\n                                    <PhotoImage src={item.gallery[0]} alt={item.id} />\r\n                                </PhotoThumb>\r\n                            </CartContainer>\r\n                        </CartListItem>\r\n                    })}\r\n            </CartList>\r\n\r\n            {items.length > 0 ? <CartTotalContainer>\r\n                <CartTotal>\r\n                    <CartTotalSpan>Tax 21%:</CartTotalSpan>\r\n                    {currency}{this.countTax(items, currency, tax)}\r\n                </CartTotal>\r\n                <CartTotal>\r\n                    <CartTotalSpan>Quantity:</CartTotalSpan> {items.length}\r\n                </CartTotal>\r\n                <CartTotal>\r\n                    <CartTotalSpan>Total: </CartTotalSpan>\r\n                    {currency}{this.countTax(items, currency)}\r\n                </CartTotal>\r\n                <CartButton type=\"button\"\r\n                >Order</CartButton>\r\n            </CartTotalContainer> : null}\r\n        </Container>;\r\n    }\r\n}"],"names":["Container","styled","PageName","NoProductTitle","CartList","CartListItem","CartTitle","CartModel","CartContainer","CartTotal","CartTotalSpan","CartButton","TextContainer","QuantityContainer","QuantityAdjastment","Plus","PlusSquare","Minus","MinusSquare","AttributesList","ColorWrapper","props","color","Paragraph","Price","Size","AttributesItem","chosen","AttributesColorItem","border","PhotoThumb","PhotoImage","List","Item","CartTotalContainer","CartPage","state","totalPrice","findPrice","prices","find","price","currency","symbol","trim","amount","countTax","items","tax","map","item","it","reduce","acc","toFixed","attributesRender","attributes","attribute","name","idx","itemName","id","toLowerCase","inState","cart","canRender","value","onClick","e","cartAmountHandler","uuidv4","this","prod","push","length","brand","filter","src","gallery","alt","type","Component"],"sourceRoot":""}