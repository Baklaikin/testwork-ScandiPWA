{"version":3,"file":"static/js/203.0f53317f.chunk.js","mappings":"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","sources":["components/product-card/ProdCard.styled.jsx","components/product-card/ProdCart.jsx","components/product-list/ProductListPage.styled.jsx","components/product-list/ProductListPage.jsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\nposition: relative;\r\nheight: auto;\r\nflex-grow: 1;\r\npadding:16px;\r\ncursor: pointer;\r\nbox-shadow: ${props => props.inCart ? \"0px 4px 35px rgba(168, 172, 176, 0.19)\": \"0\"};\r\n`;\r\n\r\nexport const Thumb = styled.div`\r\nposition: relative;\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\nwidth:100%;\r\nwidth: 354px;\r\nheight:330px;\r\noverflow: hidden;\r\nmargin-bottom: 24px;\r\n`;\r\n\r\nexport const Image = styled.img`\r\nmax-width:100%;\r\ndisplay:block;\r\nheight:100%;\r\nobject-fit:cover;\r\n`;\r\n\r\nexport const Title = styled.p`\r\nmargin: 0;\r\ntext-align:left;\r\nfont-weight: 500;\r\nfont-size: 18px;\r\ncolor: var(--text-color);\r\n`;\r\n\r\nexport const OutOfStockText = styled.p`\r\nfont-size: 24px;\r\ncolor: #8D8F9A;\r\n`;\r\n\r\nexport const OutOfStockContainer = styled.div`\r\nposition: absolute;\r\ndisplay:flex;\r\nalign-items:center;\r\njustify-content:center;\r\nwidth:100%;\r\nheight:100%;\r\ntop: 0;\r\nleft: 0;\r\nbackground-color: rgba(255,255,255,0.5);\r\n`;\r\n\r\nexport const Item = styled.li`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-end;\r\n  flex-basis: calc((100% / 3) - 30px);\r\n  margin-left: 10px;\r\n  margin-top: 10px;\r\n`;\r\n\r\nexport const InCart = styled.div`\r\nposition: absolute;\r\nbottom: 74px;\r\nright: 31px;\r\ndisplay:flex;\r\nalign-items: center;\r\njustify-content: center;\r\nwidth:52px;\r\nheight: 52px;\r\nborder-radius: 50%;\r\nbackground-color: var(--button-color);\r\n\r\n& Container{\r\n  box-shadow: 0px 4px 35px rgba(168, 172, 176, 0.19);\r\n}\r\n`;","import { Component } from \"react\";\r\nimport { ReactComponent as CartIcon } from \"../../images/cart.svg\";\r\nimport { Container, Thumb, Image, Title, OutOfStockText, OutOfStockContainer, InCart } from \"./ProdCard.styled\";\r\n \r\nexport default class ProdCard extends Component {\r\n    state = {}\r\n  \r\n    componentDidUpdate(prevProps, _) {\r\n        if (prevProps.currency !== this.props.currency) {\r\n            this.setState({ currency: this.props.currency })\r\n        }\r\n    }\r\n \r\n    render() {\r\n        const { gallery, description, name, inStock, id } = this.props.value;\r\n        const inCart = this.props.inCart.length > 0 ? this.props.inCart.find(prod => prod.id === id) : null\r\n        if (inCart) {\r\n            return <Container inCart onClick={()=>this.props.handleClick(id)}>\r\n                <Thumb>\r\n                    <Image src={gallery[0]} alt={description} />\r\n                        {!inStock &&\r\n                            <OutOfStockContainer>\r\n                                <OutOfStockText>\r\n                                    Out of Stock\r\n                                </OutOfStockText>\r\n                        </OutOfStockContainer>\r\n                        }\r\n                </Thumb>\r\n                <InCart>\r\n                    <CartIcon/>\r\n                </InCart>\r\n                \r\n                <Title>{name }</Title>\r\n                <Title>{this.props.currency}{this.props.price}</Title>\r\n            </Container >\r\n        } else {\r\n        return <Container onClick={() => this.props.handleClick(id)}>\r\n                <Thumb>\r\n                    <Image src={gallery[0]} alt={description} />\r\n                        {!inStock &&\r\n                            <OutOfStockContainer>\r\n                                <OutOfStockText>\r\n                                    Out of Stock\r\n                                </OutOfStockText>\r\n                        </OutOfStockContainer>\r\n                        }\r\n                </Thumb>\r\n                <Title>{name }</Title>\r\n                <Title>{this.props.currency}{this.props.price}</Title>\r\n        </Container>\r\n    }\r\n    }\r\n\r\n}\r\n","import { NavLink } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const List = styled.ul`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr;\r\n  grid-column-gap: 40px;\r\n  grid-row-gap:40px;\r\n  list-style: none;\r\n  padding:0;\r\n  width: 100%;\r\n`;\r\n\r\nexport const Item = styled(NavLink)`\r\n\r\n`;\r\n\r\nexport const Container = styled.div`\r\nmax-width:1440px;\r\nmargin:0 auto;\r\npadding:80px 101px;\r\n`;\r\n\r\nexport const CategoryTitle = styled.h1`\r\ntext-align:left;\r\nmargin-bottom:103px;\r\nfont-size: 42px;\r\nline-height:1.6;\r\n&::first-letter{\r\ntext-transform: capitalize;\r\n}\r\n`;\r\n\r\nexport const ItemLi = styled.li`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-end;\r\n`;","import { Component } from \"react\";\r\nimport ProdCard from \"../product-card/ProdCart\";\r\nimport { getInfo } from \"../../api/api\";\r\nimport { getCategory } from \"../../queries/queries\";\r\nimport { List, Item, Container, CategoryTitle, ItemLi } from \"../product-list/ProductListPage.styled\";\r\n\r\nexport default class ProductListPage extends Component{\r\n  state = {\r\n    }\r\n    \r\n    componentDidMount() {\r\n      if (this.props.category) {\r\n        getInfo(getCategory(this.props.category)).then(res => { this.setState({ products: res.category.products }) })\r\n        localStorage.setItem(\"category\", JSON.stringify(this.props.category))\r\n      } else {\r\n        getInfo(getCategory(\"all\")).then(res => { this.setState({ products: res.category.products }) })\r\n      } \r\n      \r\n  }\r\n  \r\n  componentDidUpdate(prevProps,_) {\r\n    if (prevProps.category !== this.props.category) {\r\n      getInfo(getCategory(this.props.category)).then(res => this.setState({products:res.category.products}))\r\n    }\r\n  }\r\n    render() {\r\n      return (\r\n        <Container>\r\n          <CategoryTitle>{ this.props.category}</CategoryTitle>\r\n            <List> \r\n            {this.state.products && this.state.products.map(prod => {\r\n              const price = prod.prices.find(price => price.currency.symbol === this.props.currency.trim())\r\n              return(\r\n              <ItemLi key={prod.id}>\r\n                <Item to={`/${this.props.category}/${prod.id}`} key={prod.id}>\r\n                    <ProdCard value={prod} price={price.amount} currency={this.props.currency} handleClick={\r\n                      this.props.setProduct} inCart={this.props.inCart} />\r\n                </Item>\r\n              </ItemLi>)\r\n            })}\r\n          </List>\r\n          </Container>\r\n        )\r\n}\r\n}"],"names":["Container","styled","props","inCart","Thumb","Image","Title","OutOfStockText","OutOfStockContainer","InCart","ProdCard","state","prevProps","_","currency","this","setState","value","gallery","description","name","inStock","id","length","find","prod","onClick","handleClick","src","alt","price","Component","List","Item","NavLink","CategoryTitle","ItemLi","ProductListPage","category","getInfo","getCategory","then","res","products","localStorage","setItem","JSON","stringify","map","prices","symbol","trim","to","amount","setProduct"],"sourceRoot":""}